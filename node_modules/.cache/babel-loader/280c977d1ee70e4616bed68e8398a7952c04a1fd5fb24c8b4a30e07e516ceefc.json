{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useContext } from 'react';\nimport { HiMoon, HiSun } from 'react-icons/hi';\nimport { twMerge } from 'tailwind-merge';\nimport { useTheme } from '../../';\nimport { ThemeContext } from '../../components/Flowbite/ThemeContext';\nimport { mergeDeep } from '../../helpers/merge-deep';\nexport const DarkThemeToggle = _ref => {\n  let {\n    className,\n    theme: customTheme = {},\n    iconDark: IconDark = HiSun,\n    iconLight: IconLight = HiMoon,\n    ...props\n  } = _ref;\n  const theme = mergeDeep(useTheme().theme.darkThemeToggle, customTheme);\n  const {\n    mode,\n    toggleMode\n  } = useContext(ThemeContext);\n  return _jsx(\"button\", {\n    \"aria-label\": \"Toggle dark mode\",\n    \"data-testid\": \"dark-theme-toggle\",\n    onClick: toggleMode,\n    type: \"button\",\n    className: twMerge(theme.root.base, className),\n    ...props,\n    children: mode === 'dark' ? _jsx(IconLight, {\n      \"aria-label\": \"Currently dark mode\",\n      className: theme.root.icon\n    }) : _jsx(IconDark, {\n      \"aria-label\": \"Currently light mode\",\n      className: theme.root.icon\n    })\n  });\n};\nDarkThemeToggle.displayName = 'DarkThemeToggle';","map":{"version":3,"names":["jsx","_jsx","useContext","HiMoon","HiSun","twMerge","useTheme","ThemeContext","mergeDeep","DarkThemeToggle","_ref","className","theme","customTheme","iconDark","IconDark","iconLight","IconLight","props","darkThemeToggle","mode","toggleMode","onClick","type","root","base","children","icon","displayName"],"sources":["/home/pranjal/MyProjects/InternStellar/node_modules/flowbite-react/lib/esm/components/DarkThemeToggle/DarkThemeToggle.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useContext } from 'react';\nimport { HiMoon, HiSun } from 'react-icons/hi';\nimport { twMerge } from 'tailwind-merge';\nimport { useTheme } from '../../';\nimport { ThemeContext } from '../../components/Flowbite/ThemeContext';\nimport { mergeDeep } from '../../helpers/merge-deep';\nexport const DarkThemeToggle = ({ className, theme: customTheme = {}, iconDark: IconDark = HiSun, iconLight: IconLight = HiMoon, ...props }) => {\n    const theme = mergeDeep(useTheme().theme.darkThemeToggle, customTheme);\n    const { mode, toggleMode } = useContext(ThemeContext);\n    return (_jsx(\"button\", { \"aria-label\": \"Toggle dark mode\", \"data-testid\": \"dark-theme-toggle\", onClick: toggleMode, type: \"button\", className: twMerge(theme.root.base, className), ...props, children: mode === 'dark' ? (_jsx(IconLight, { \"aria-label\": \"Currently dark mode\", className: theme.root.icon })) : (_jsx(IconDark, { \"aria-label\": \"Currently light mode\", className: theme.root.icon })) }));\n};\nDarkThemeToggle.displayName = 'DarkThemeToggle';\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,MAAM,EAAEC,KAAK,QAAQ,gBAAgB;AAC9C,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,QAAQ,QAAQ,QAAQ;AACjC,SAASC,YAAY,QAAQ,wCAAwC;AACrE,SAASC,SAAS,QAAQ,0BAA0B;AACpD,OAAO,MAAMC,eAAe,GAAGC,IAAA,IAAiH;EAAA,IAAhH;IAAEC,SAAS;IAAEC,KAAK,EAAEC,WAAW,GAAG,CAAC,CAAC;IAAEC,QAAQ,EAAEC,QAAQ,GAAGX,KAAK;IAAEY,SAAS,EAAEC,SAAS,GAAGd,MAAM;IAAE,GAAGe;EAAM,CAAC,GAAAR,IAAA;EACvI,MAAME,KAAK,GAAGJ,SAAS,CAACF,QAAQ,EAAE,CAACM,KAAK,CAACO,eAAe,EAAEN,WAAW,CAAC;EACtE,MAAM;IAAEO,IAAI;IAAEC;EAAW,CAAC,GAAGnB,UAAU,CAACK,YAAY,CAAC;EACrD,OAAQN,IAAI,CAAC,QAAQ,EAAE;IAAE,YAAY,EAAE,kBAAkB;IAAE,aAAa,EAAE,mBAAmB;IAAEqB,OAAO,EAAED,UAAU;IAAEE,IAAI,EAAE,QAAQ;IAAEZ,SAAS,EAAEN,OAAO,CAACO,KAAK,CAACY,IAAI,CAACC,IAAI,EAAEd,SAAS,CAAC;IAAE,GAAGO,KAAK;IAAEQ,QAAQ,EAAEN,IAAI,KAAK,MAAM,GAAInB,IAAI,CAACgB,SAAS,EAAE;MAAE,YAAY,EAAE,qBAAqB;MAAEN,SAAS,EAAEC,KAAK,CAACY,IAAI,CAACG;IAAK,CAAC,CAAC,GAAK1B,IAAI,CAACc,QAAQ,EAAE;MAAE,YAAY,EAAE,sBAAsB;MAAEJ,SAAS,EAAEC,KAAK,CAACY,IAAI,CAACG;IAAK,CAAC;EAAG,CAAC,CAAC;AAChZ,CAAC;AACDlB,eAAe,CAACmB,WAAW,GAAG,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}