{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useMemo } from 'react';\nimport { theme as defaultTheme } from '../../';\nimport { mergeDeep } from '../../helpers/merge-deep';\nimport { ThemeContext, useTheme, useThemeMode } from './ThemeContext';\nexport const Flowbite = _ref => {\n  let {\n    children,\n    theme = {}\n  } = _ref;\n  const {\n    theme: customTheme = {},\n    dark\n  } = theme;\n  const [mode, setMode, toggleMode] = useThemeMode();\n  const mergedTheme = mergeDeep(defaultTheme, customTheme);\n  useEffect(() => {\n    if (dark) {\n      setMode('dark');\n      document.documentElement.classList.add('dark');\n    } else {\n      setMode('light');\n      document.documentElement.classList.remove('dark');\n    }\n  }, [dark, setMode]);\n  const themeContextValue = useMemo(() => ({\n    theme: mergedTheme,\n    mode,\n    toggleMode\n  }), [mode, toggleMode, mergedTheme]);\n  return _jsx(ThemeContext.Provider, {\n    value: themeContextValue,\n    children: children\n  });\n};\nFlowbite.displayName = 'Flowbite';\nexport { useTheme, useThemeMode };","map":{"version":3,"names":["jsx","_jsx","useEffect","useMemo","theme","defaultTheme","mergeDeep","ThemeContext","useTheme","useThemeMode","Flowbite","_ref","children","customTheme","dark","mode","setMode","toggleMode","mergedTheme","document","documentElement","classList","add","remove","themeContextValue","Provider","value","displayName"],"sources":["/home/pranjal/MyProjects/InternStellar/node_modules/flowbite-react/lib/esm/components/Flowbite/Flowbite.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useMemo } from 'react';\nimport { theme as defaultTheme } from '../../';\nimport { mergeDeep } from '../../helpers/merge-deep';\nimport { ThemeContext, useTheme, useThemeMode } from './ThemeContext';\nexport const Flowbite = ({ children, theme = {} }) => {\n    const { theme: customTheme = {}, dark } = theme;\n    const [mode, setMode, toggleMode] = useThemeMode();\n    const mergedTheme = mergeDeep(defaultTheme, customTheme);\n    useEffect(() => {\n        if (dark) {\n            setMode('dark');\n            document.documentElement.classList.add('dark');\n        }\n        else {\n            setMode('light');\n            document.documentElement.classList.remove('dark');\n        }\n    }, [dark, setMode]);\n    const themeContextValue = useMemo(() => ({\n        theme: mergedTheme,\n        mode,\n        toggleMode,\n    }), [mode, toggleMode, mergedTheme]);\n    return _jsx(ThemeContext.Provider, { value: themeContextValue, children: children });\n};\nFlowbite.displayName = 'Flowbite';\nexport { useTheme, useThemeMode };\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC1C,SAASC,KAAK,IAAIC,YAAY,QAAQ,QAAQ;AAC9C,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,YAAY,EAAEC,QAAQ,EAAEC,YAAY,QAAQ,gBAAgB;AACrE,OAAO,MAAMC,QAAQ,GAAGC,IAAA,IAA8B;EAAA,IAA7B;IAAEC,QAAQ;IAAER,KAAK,GAAG,CAAC;EAAE,CAAC,GAAAO,IAAA;EAC7C,MAAM;IAAEP,KAAK,EAAES,WAAW,GAAG,CAAC,CAAC;IAAEC;EAAK,CAAC,GAAGV,KAAK;EAC/C,MAAM,CAACW,IAAI,EAAEC,OAAO,EAAEC,UAAU,CAAC,GAAGR,YAAY,EAAE;EAClD,MAAMS,WAAW,GAAGZ,SAAS,CAACD,YAAY,EAAEQ,WAAW,CAAC;EACxDX,SAAS,CAAC,MAAM;IACZ,IAAIY,IAAI,EAAE;MACNE,OAAO,CAAC,MAAM,CAAC;MACfG,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAClD,CAAC,MACI;MACDN,OAAO,CAAC,OAAO,CAAC;MAChBG,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IACrD;EACJ,CAAC,EAAE,CAACT,IAAI,EAAEE,OAAO,CAAC,CAAC;EACnB,MAAMQ,iBAAiB,GAAGrB,OAAO,CAAC,OAAO;IACrCC,KAAK,EAAEc,WAAW;IAClBH,IAAI;IACJE;EACJ,CAAC,CAAC,EAAE,CAACF,IAAI,EAAEE,UAAU,EAAEC,WAAW,CAAC,CAAC;EACpC,OAAOjB,IAAI,CAACM,YAAY,CAACkB,QAAQ,EAAE;IAAEC,KAAK,EAAEF,iBAAiB;IAAEZ,QAAQ,EAAEA;EAAS,CAAC,CAAC;AACxF,CAAC;AACDF,QAAQ,CAACiB,WAAW,GAAG,UAAU;AACjC,SAASnB,QAAQ,EAAEC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}